{
  "EDITOR_STATE": {
    "allProjectFiles": {
      "6fe886d6-f3d3-4aaf-97f7-ae63040451b6": {
        "id": "6fe886d6-f3d3-4aaf-97f7-ae63040451b6",
        "parent": null,
        "name": "hiru0209_test",
        "type": "DIRECTORY",
        "isDirectory": true,
        "children": [
          "27f28afd-b511-4bfc-9821-4e74fcd65b33"
        ],
        "isRemovable": false,
        "filePath": "hiru0209_test"
      },
      "27f28afd-b511-4bfc-9821-4e74fcd65b33": {
        "id": "27f28afd-b511-4bfc-9821-4e74fcd65b33",
        "parent": "6fe886d6-f3d3-4aaf-97f7-ae63040451b6",
        "name": "lambda.js",
        "type": "JS_LAMBDA",
        "isDirectory": false,
        "children": [],
        "isRemovable": true,
        "filePath": "hiru0209_test/lambda.js",
        "code": "let AWS = require('aws-sdk');\nconst ddb = new AWS.DynamoDB.DocumentClient();\n\nexports.handler = function (event, context, callback) {\n    let dynamicHtml = '<p>Hey Unknown!</p>';\n    // check for GET params and use if available\n    if (event.queryStringParameters && event.queryStringParameters.name) {\n        dynamicHtml = `<p>Hey ${event.queryStringParameters.name}!</p>`;\n    }\n    ddb.get({\n        TableName: 'Hiru1T',\n        Key: { 'id': '01' }\n    }).promise()\n        .then((data) => {\n            //your logic goes here\n        })\n        .catch((err) => {\n            //handle error\n        });\n\n    const html = `\n  <html>\n    <style>\n      h1 { color: #73757d; }\n    </style>\n    <body>\n      <h1>Landing Page</h1>\n      ${dynamicHtml}\n      \n    </body>\n  </html>`;\n\n    const response = {\n        statusCode: 200,\n        headers: {\n            'Content-Type': 'text/html',\n        },\n        body: html,\n    };\n\n    // callback is sending HTML back\n    callback(null, response);\n}",
        "config": {
          "runtime": "nodejs8.10",
          "handler": "handler",
          "timeout": 60,
          "memory": 128,
          "layers": []
        },
        "triggers": [
          {
            "resourceName": "apigusEast1HiruAPItesthiruget",
            "config": {}
          }
        ]
      }
    },
    "deletedFiles": [],
    "rootNode": "6fe886d6-f3d3-4aaf-97f7-ae63040451b6",
    "openFiles": [
      "27f28afd-b511-4bfc-9821-4e74fcd65b33"
    ],
    "currentFileId": "27f28afd-b511-4bfc-9821-4e74fcd65b33",
    "resources": {
      "apigusEast1HiruAPItesthiruget": {
        "name": "apigusEast1HiruAPItesthiruget",
        "type": "API_GATEWAY",
        "config": {
          "selectedRegion": "us-east-1",
          "apiMode": 1,
          "apiName": "HiruAPI",
          "apiId": "bevmmoznda",
          "endpointType": "EDGE",
          "rootResourceId": "20m9chisb7",
          "existingResources": {
            "/": "20m9chisb7",
            "/135": "37okfh",
            "/135/async": "jevuxc"
          },
          "resourceMode": 0,
          "resourceName": "testhiru",
          "resourcePath": "/testhiru",
          "restMethod": "GET",
          "proxyIntegration": false,
          "enableCORS": false,
          "stageMode": 1,
          "stageName": "Test",
          "stageDeploymentId": "fsrgx6",
          "mode": 1
        }
      },
      "ddbHiru1T": {
        "name": "ddbHiru1T",
        "type": "DynamoDB",
        "config": {
          "mode": 0,
          "operation": "get",
          "table": {
            "arn": "",
            "name": "Hiru1T",
            "partitionKey": "id",
            "partitionKeyType": "S",
            "hasSortKey": false,
            "sortKey": "",
            "sortKeyType": "S",
            "payPerRequest": true,
            "mode": 0
          },
          "isGlobalEditMode": false,
          "parameters": {
            "Key": {
              "id": "01"
            },
            "Item": {},
            "ExpressionAttributeValues": {}
          },
          "triggerParams": {},
          "validator": {
            "validatableFields": {},
            "validity": true
          },
          "valid": true
        }
      }
    },
    "customTemplate": {
      "dialect": null,
      "definitions": null
    },
    "envVariables": [
      {
        "lambdaId": "all",
        "varKey": "SIGMA_AWS_ACC_ID",
        "varValue": null,
        "shouldPersist": false,
        "displayOnly": false,
        "editable": false
      }
    ],
    "packageJSON": {
      "dependencies": {
        "aws-sdk": {
          "name": "aws-sdk",
          "language": "javascript",
          "version": "2.176.0",
          "dev": true,
          "notRemovable": false
        }
      }
    }
  },
  "PROJECT_META": {
    "projectName": "hiru0209_test",
    "projectDescription": "",
    "projectVersion": "1.0.0",
    "projectRegion": "us-east-1",
    "platform": "AWS",
    "platformRegions": {},
    "lastSave": 1567430939080
  },
  "VCS_STATE": {
    "provider": "GitHub",
    "repo": {
      "name": "hiru0209_test",
      "url": "https://github.com/HirudineeADRT/hiru0209_test"
    }
  }
}